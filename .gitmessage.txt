################
# [Position] Type: message 의 형식으로 제목을 아래 공백줄에 작성
# 제목은 50자 이내 / 변경사항이 "무엇"인지 명확히 작성 / 끝에 마침표 금지    
#- Example
#    - Type 첫 글자는 대문자
#    - `Type:(공백)message` 공백 주의하여 작성
#    - message는 50자 내로 작성하고, 끝에 . (마침표) 사용 ❌
#    - `[FE: S07P12E104-12] Feat: 로그인 기능 구현`
# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)

################
# 본문(구체적인 내용)을 아랫줄에 작성
# 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)
- 회원 정보 확인
- 토큰 발급 및 저장

################
# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)
# Jira Smart commit 사용 시 Jira 이슈 또한 종료할 수 있음.
# 예) Close #7

################
### Code 관련
# Add : 코드나 문자 추가
# Test : 테스트 코드 삽입
# Update : Fix와 달리 원래 정상적으로 동작한 기능의 보완 개념
# Fix : 버그 수정
# Remove : 코드 삭제
# Refactor : 결과의 변경 없이 코드 구조 재조정
#               Ex) createStore의 함수를 작은 함수로 분리
# Move : 코드나 파일의 이동
# Style : 서식, 세미콜론 누락
# Correct : 문법 오류, 타입 및 변수 이름 변경 등 수정 사항에 사용

### 기능 관련
# Feat : 새로운 기능 추가
# Improve : 호환성, 테스트 커버리지(테스트 케이스가 얼마나 충족 한지), 접근성 향상
# Chore : 기타 작업, 빌드 작업, 패키지 관리자 구성 등 업데이트, Production Code 변경 없음
# Test : git 관련 테스트 혹은 코드 관련 테스트 진행

### 파일, 폴더 관련
# Docs : 문서 변경 (문서 추가, 이름 변경 등)
# Move : 코드나 파일의 이동
# Rename : 이름 변경
# Create : 파일이나 폴더 추가
################